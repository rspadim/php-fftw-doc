<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 331220 $ -->

<refentry xml:id="function.fftw-plan-dft-1d" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>fftw_plan_dft_1d</refname>
  <refpurpose>Plan a complex input/output discrete Fourier transform (DFT) in 1 dimension, returning an fftw_plan.</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>fftw_plan</type><methodname>fftw_plan_dft_1d</methodname>
   <methodparam><type>int</type><parameter>n</parameter></methodparam>
   <methodparam><type>array</type><parameter>in</parameter></methodparam>
   <methodparam><type>int</type><parameter>sign</parameter></methodparam>
   <methodparam><type>int</type><parameter>flags</parameter></methodparam>
  </methodsynopsis>
  <para>
   Plan a complex input/output discrete Fourier transform (DFT) in zero or more dimensions, returning an 
   fftw_plan.
   Once you have created a plan for a certain transform type and parameters, then creating another plan of 
   the same type and parameters, but for different arrays, is fast and shares constant data with the first 
   plan (if it still exists).
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>n</parameter></term>
    <listitem>
     &fftw.n.description;
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>in</parameter></term>
    <listitem>
     &fftw.in.description;
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>sign</parameter></term>
    <listitem>
     &fftw.sign.description;
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>flags</parameter></term>
    <listitem>
     &fftw.flags.description;
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   The planner returns NULL if the plan cannot be created. In the standard FFTW distribution, the basic 
   interface is guaranteed to return a non-NULL plan. A plan may be NULL, however, if you are using a 
   customized FFTW configuration supporting a restricted set of transforms.
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fftw_plan_dft_2d</function></member>
    <member><function>fftw_plan_dft_3d</function></member>
    <member><function>fftw_plan_dft</function></member>
    <member><function>fftw_plan_dft_r2c_1d</function></member>
    <member><function>fftw_plan_dft_r2c_2d</function></member>
    <member><function>fftw_plan_dft_r2c_3d</function></member>
    <member><function>fftw_plan_dft_r2c</function></member>
    <member><function>fftw_plan_r2r_1d</function></member>
    <member><function>fftw_plan_r2r_2d</function></member>
    <member><function>fftw_plan_r2r_3d</function></member>
    <member><function>fftw_plan_r2r</function></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
